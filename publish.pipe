---
version: 0.0.1

public:
  publish::all:
    pipe:
      - publish::obtain-git-status:
          shell:
            run: git status
      - print-if-match:
          pattern: (?m)^Everything up-to-date$|^nothing to commit, working tree clean$
          message: clean
          else: dirty
      - ~:
          each:
            - publish::git-status-indicator
            - publish::upload

private:
  publish::calculate-shasum:
    pipe:
      - tarball-shasum:
          dirs: "cmd include src util"
          env:
            save: PIPEDREAM_INSTALL_SHASUM

  publish::catch-git-status-error:
    pipe:
      - publish::git-status-good-branch:
          when: "'$!!' == 'Everything up-to-date\n'"
          print:
            message: "clean"
      - publish::git-status-bad-branch:
          when: "'$!!' != 'Everything up-to-date\n'"
          print:
            message: "dirty"

  publish::git-status-indicator:
    shell:
      args:
        - prefix: "Local git repo status"
        - text: "$!!"
        - green: "clean"
      run: "traffic-light"

  publish::upload:
    pipe:
      - publish::perform-upload:
          when: "'$!!' =~ 'clean'"
      - print:
          when: "'$!!' !~ 'clean'"
          message: "skipped"
      - publish::report-upload-status:
          shell:
            args:
              - amber: "^skipped$"
              - green: "^published"
              - prefix: "Git push"
            run: "traffic-light"

  publish::perform-upload:
    interpolate:
      escapeQuotes: all
    sync:
      - publish::create-new-version-string:
          shell:
            run: "svu n"
          env:
            save: PIPEDREAM_PUBLISH_VERSION
      - publish::increment-npm-version:
          shell:
            run: "npm version $PIPEDREAM_PUBLISH_VERSION --allow-same-version"
      - publish::push-to-git-repo:
          shell:
            run: "git push --follow-tags"
          catch: publish::handle-git-push-error
      - print:
          when: "'$!!' == ''"
          message: "published $PIPEDREAM_PUBLISH_VERSION"

  publish::handle-git-push-error:
    each:
      - print:
          when: "'$!!' =~ 'Permission denied'"
          message: "permission denied"
      - noop:
          when: "'$!!' =~ 'Everything up-to-date'"
      - print:
          when: "'$!!' !~ 'Permission denied|Everything up-to-date'"
          message: "uncaught error ('$!!')"
