name: PipeDream release

on:
  push:
    tags:
      - '*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        uses: codecov/codecov-action@v1
        with:
          files: ./test/coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      -
        name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      -
        name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.PIPEDREAM_RELEASE_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PIPEDREAM_RELEASE_GPG_PASSPHRASE }}
      -
        name: Generate repo shasum
        run: echo "PIPEDREAM_INSTALL_SHASUM=$(tar -cf - cmd include src util install.pipe | shasum | sed 's/[^0-9a-f]*//g' | tr -d '\\n')" >> $GITHUB_ENV
      -
        name: Run GoReleaser
        id: goreleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.PIPEDREAM_RELEASE_ACTION_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
      -
        name: Create Packages file
        run: dpkg-scanpackages -m dist | gzip -c > dist/Packages.gz
      -
        name: Upload Packages file
        id: upload-packages-file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Packages.gz
          asset_name: Packages.gz
          asset_content_type: application/gzip
      - uses: actions/setup-node@v1
      - name: Publish
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}