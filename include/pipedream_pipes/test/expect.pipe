---
version: 0.0.1

default:
  command: install

public:
  test::expect::output:
    inherit:
      - testName
    pipe:
      - expect::check-output:
          expectedOutput: "@{text}"
      - ~:
          shell:
            args:
              - green: "^passed$"
              - prefix: "@{testName|Test}"
            run: "traffic-light"

  test::expect::output-pattern:
    inherit:
      - testName
    pipe:
      - expect::check-output-pattern:
          expectedOutputPattern: "@{pattern}"
      - ~:
          shell:
            args:
              - green: "^passed$"
              - prefix: "@{testName|Test}"
            run: "traffic-light"

  test::expect:
    inherit:
      - testName
    pipe:
      - test::expect::check-all:
          file: "@{file}"
          expectedOutput: "@{output}"
          expectedOutputPattern: "@{output-pattern}"
          pipe:
            - test::expect::check-file:
                when: "@?{file}"
            - test::expect::check-output:
                when: "@?{expectedOutput}"
            - test::expect::check-output-pattern:
                when: "@?{expectedOutputPattern}"
      - expect::output-result:
          pipe:
            - print::message:
                when: "'$!!' == ''"
                message: "passed"
            - ~:
                shell:
                  args:
                    green: "^passed$"
                    prefix: "@{testName|Test}"
                  run: "traffic-light"

private:
  expect::check-file:
    pipe:
      - ~:
          shell:
            run: "diff -s \"@{file}\" - | head -n 10"
      - print::message:
          when: "\"$!!\" !~ *are identical"
          message: Output does not match file!
      - print::message:
          when: "\"$!!\" !~ *does not match file!"
          message: ""

  expect::check-output:
    interpolate:
      escapeQuotes: all
    pipe:
      - print::message:
          when: "'$!!' != '@{expectedOutput}'"
          message: "failed\nActual output:\n$!!\nExpected output:\n@{expectedOutput}\n"
      - print::message:
          when: "'$!!' == '@{expectedOutput}'"
          message: "passed"

  expect::check-output-pattern:
    pipe:
      - print::message:
          when: "'$!!' !~ '@{expectedOutputPattern}'"
          message: "failed\nActual output:\n$!!\nExpected pattern:\n@{expectedOutputPattern}\n"
      - print::message:
          when: "'$!!' =~ '@{expectedOutputPattern}'"
          message: "passed"
